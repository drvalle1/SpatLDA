rm(list=ls())
#get data
setwd('U:\GIT_models\SpatLDA\fake data')
dat=read.csv('fake data1.csv',as.is=T)
ind=grep('spp',colnames(dat))
nspp=length(ind)
ngrid=nrow(dat)
rm(list=ls())
#get data
setwd('U:\\GIT_models\\SpatLDA\\fake data')
dat=read.csv('fake data1.csv',as.is=T)
ind=grep('spp',colnames(dat))
nspp=length(ind)
ngrid=nrow(dat)
tmp=unique(dat[,c('xbin','ybin')])
coord.plot=data.frame(x=tmp$xbin,y=tmp$ybin)
nplot=nrow(coord.plot)
nclust=3
head(dat)
setwd('U:\\GIT_models\\SpatLDA\\results')
tmp=read.csv('theta.csv')
setwd('U:\\GIT_models\\SpatLDA\\results')
tmp=read.csv('theta 100.csv')
dim(theta)
dim(tmp)
theta.estim=matrix(unlist(tmp[nrow(tmp),]),nplot,nclust)
nplot
nclust
dim(tmp)
tmp=read.csv('phi 100.csv')
phi.estim=matrix(unlist(tmp[nrow(tmp),]),nclust,nspp)
rm(list=ls())
library('ggplot2')
set.seed(3)
#trees
ntrees=10000
coord=data.frame(x=runif(ntrees,min=0,max=1000),
y=runif(ntrees,min=0,max=1000))
#documents
ndoc=3
coord.doc=data.frame(x=c(200,600,800),
y=c(200,400,800))
plot(y~x,data=coord)
points(y~x,data=coord.doc,col='red',pch=19)
#theta for each doc
nclust=3
theta=matrix(c(0.05,0.05,0.9,
0.05,0.9,0.05,
0.8,0.1,0.1),ndoc,nclust,byrow=T)
theta.true=theta
# apply(theta,1,sum)
#phi for each cluster
nspp=50
tmp=rbeta(nspp*nclust,0.1,0.1)
ind=sample(1:(nspp*nclust),size=25)
tmp[ind]=4
tmp1=matrix(tmp,nclust,nspp)
phi=tmp1/apply(tmp1,1,sum)
phi.true=phi
# head(round(phi[,1:10],3))
# hist(phi[5,])
#get distance from each document to each tree
dist1=matrix(NA,ntrees,ndoc)
for (i in 1:ndoc){
x2=(coord$x-coord.doc$x[i])^2
y2=(coord$y-coord.doc$y[i])^2
dist1[,i]=sqrt(x2+y2)
}
#get cluster membership for each tree
sig2=sig2.true=20
for (i in 1:ntrees){
#which document?
prob=exp(-(1/(2*sig2))*dist1[i,])
tmp=rmultinom(1,size=1,prob=prob/sum(prob))
ind=which(tmp==1)
coord$omega[i]=ind
#which cluster?
tmp=rmultinom(1,size=1,prob=theta[ind,])
ind=which(tmp==1)
coord$psi[i]=ind
#which species?
tmp=rmultinom(1,size=1,prob=phi[ind,])
ind=which(tmp==1)
coord$spp[i]=ind
}
#spatial distribution of communities
plot(y~x,data=coord,col=coord$psi,pch=19)
plot(y~x,data=coord,col=coord$omega,pch=19)
setwd('U:\\GIT_models\\SpatLDA\\fake data')
# ind=which(colnames(coord)%in%c('psi','omega'))
# write.csv(coord[,-ind],'fake data.csv',row.names=F)
write.csv(coord,'fake data.csv',row.names=F)
setwd('U:\\GIT_models\\SpatLDA\\fake data')
# ind=which(colnames(coord)%in%c('psi','omega'))
# write.csv(coord[,-ind],'fake data.csv',row.names=F)
write.csv(coord,'fake data.csv',row.names=F)
write.csv(phi.true,'phi true.csv',row.names=F)
rm(list=ls())
library('ggplot2')
set.seed(3)
#trees
ntrees=10000
coord=data.frame(x=runif(ntrees,min=0,max=1000),
y=runif(ntrees,min=0,max=1000))
#center of each group
center=data.frame(x=c(300,500,200),
y=c(100,500,800))
plot(y~x,data=center,xlim=c(0,1000),ylim=c(0,1000))
#theta
nclust=3
sd1=300 #originally 100
theta=data.frame(gr1=dnorm(coord$x,mean=center$x[1],sd=sd1)*
dnorm(coord$y,mean=center$y[1],sd=sd1),
gr2=dnorm(coord$x,mean=center$x[2],sd=sd1)*
dnorm(coord$y,mean=center$y[2],sd=sd1),
gr3=dnorm(coord$x,mean=center$x[3],sd=sd1)*
dnorm(coord$y,mean=center$y[3],sd=sd1))
theta=theta/apply(theta,1,sum)
apply(theta,2,range)
theta.true=theta
# apply(theta,1,sum)
par(mfrow=c(3,1),mar=rep(1,4))
plot(y~x,data=coord,col=grey(theta$gr1),pch=19)
points(y~x,data=center,pch=19,col='red')
plot(y~x,data=coord,col=grey(theta$gr2),pch=19)
points(y~x,data=center,pch=19,col='red')
plot(y~x,data=coord,col=grey(theta$gr3),pch=19)
points(y~x,data=center,pch=19,col='red')
#phi for each cluster
nspp=50
tmp=rbeta(nspp*nclust,0.1,0.1)
ind=sample(1:(nspp*nclust),size=25)
tmp[ind]=4
tmp1=matrix(tmp,nclust,nspp)
phi=tmp1/apply(tmp1,1,sum)
phi.true=phi
# head(round(phi[,1:10],3))
# hist(phi[5,])
#get cluster membership for each tree
for (i in 1:ntrees){
tmp=rmultinom(1,size=1,prob=theta[i,])
ind=which(tmp==1)
coord$psi[i]=ind
#which species?
tmp=rmultinom(1,size=1,prob=phi[ind,])
ind=which(tmp==1)
coord$spp[i]=ind
}
#spatial distribution of communities
plot(y~x,data=coord,col=coord$psi,pch=19)
#export results
setwd('U:\\GIT_models\\SpatLDA\\fake data')
# ind=which(colnames(coord)%in%c('psi','omega'))
# write.csv(coord[,-ind],'fake data.csv',row.names=F)
write.csv(coord,'fake data.csv',row.names=F)
coord=expand.grid(x=seq(from=0,to=1000,by=10),
y=seq(from=0,to=1000,by=10))
theta=data.frame(gr1=dnorm(coord$x,mean=center$x[1],sd=sd1)*
dnorm(coord$y,mean=center$y[1],sd=sd1),
gr2=dnorm(coord$x,mean=center$x[2],sd=sd1)*
dnorm(coord$y,mean=center$y[2],sd=sd1),
gr3=dnorm(coord$x,mean=center$x[3],sd=sd1)*
dnorm(coord$y,mean=center$y[3],sd=sd1))
theta=theta/apply(theta,1,sum)
coord1=cbind(coord,theta)
setwd('U:\\GIT_models\\SpatLDA\\fake data')
write.csv(coord1,'fake data proportions.csv',row.names=F)
write.csv(phi.true,'fake data phi.csv',row.names=F)
library(gridExtra)
library(grid)
p1=ggplot() +
geom_tile(data = coord1, alpha = 0.8,aes(x = x, y = y,fill = gr1)) +
scale_fill_gradient2(low = "cyan", mid = "red",high='purple',limits=c(0,1),midpoint=0.5)
p2=ggplot() +
geom_tile(data = coord1, alpha = 0.8,aes(x = x, y = y,fill = gr2)) +
scale_fill_gradient2(low = "cyan", mid = "red",high='purple',limits=c(0,1),midpoint=0.5)
p3=ggplot() +
geom_tile(data = coord1, alpha = 0.8,aes(x = x, y = y,fill = gr3)) +
scale_fill_gradient2(low = "cyan", mid = "red",high='purple',limits=c(0,1),midpoint=0.5)
grid.arrange(p1, p2, p3,nrow = 1)
rm(list=ls())
set.seed(3)
setwd('U:\\GIT_models\\SpatLDA\\fake data')
dat=read.csv('fake data.csv')
#create grid cells of 50 x 50 m
grid.size=50
brk=seq(from=0,to=1000,by=grid.size)
mid=brk[-length(brk)]+(grid.size/2)
tmp=cut(dat$x,breaks=brk);
ind=as.numeric(tmp)
dat$xbin=mid[ind]
tmp=cut(dat$y,breaks=brk);
ind=as.numeric(tmp)
dat$ybin=mid[ind]
uni.coord=unique(dat[,c('xbin','ybin')])
ngrid=nrow(uni.coord); ngrid
#get count of trees for each species in each grid cell
nspp=max(dat$spp)
res=matrix(0,ngrid,nspp)
for (i in 1:ngrid){
cond=dat$xbin==uni.coord$xbin[i] &
dat$ybin==uni.coord$ybin[i]
dat1=dat[cond,]
tmp=table(dat1$spp)
res[i,as.numeric(names(tmp))]=tmp
}
colnames(res)=paste0('spp',1:nspp)
res1=cbind(uni.coord,res)
setwd('U:\\GIT_models\\SpatLDA\\fake data')
write.csv(res1,'fake data1.csv',row.names=F)
rm(list=ls(all=TRUE))
library('gtools')
library('Rcpp')
library('RcppArmadillo')
set.seed(1)
#get functions
setwd('U:\\GIT_models\\SpatLDA')
sourceCpp('SpatLDA_aux.cpp')
source('SpatLDA aux functions.R')
source('SpatLDA_main_func.R')
#get data
setwd('U:\\GIT_models\\SpatLDA\\fake data')
dat=read.csv('fake data1.csv',as.is=T)
#potential documents
tmp=unique(dat[,c('xbin','ybin')])
coord.plot=data.frame(x=tmp$xbin,y=tmp$ybin)
#useful stuff
nclust=3
ngibbs=10000
nburn=ngibbs/2
#priors
gamma.theta=0.1
gamma.phi=0.1
#run Gibbs sampler
mod=SpatLDA(nclust=nclust,ngibbs=ngibbs,nburn=nburn,
coord.plot=coord.plot,dat=dat,
gamma.theta=gamma.theta,gamma.phi=gamma.phi)
